Comment(
	This file is part of the open-lmake distribution (git@github.com:cesar-douady/open-lmake.git)
	Copyright (c) 2023-2025 Doliam
	This program is free software: you can redistribute/modify under the terms of the GPL-v3 (https://www.gnu.org/licenses/gpl-3.0.html).
	This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
)

Header(ltarget,report targets from a OpenLmake job)

.SH DESCRIPTION
.LP
B(ltarget) may be used to pass flags to OpenLmake.
Unless specified otherwise, passed targets are allowed to be written to.
.LP
Note that :
Bullet
	Flags can be passed in (cf. OPTIONS below).
	Flags accumulate and will apply even if the file is independently accessed.
Bullet
	Targets are reported even if the autodep method (the I(autodep) rule attribute) is I(none).
	This is B(the) way (or a call to B(lmake.target)) of reporting targets in such a case (usually with I(--write)).
.LP
Symlobic links are not followed when files are interpreted.
Following symbolic links would inevitably lead to files being read (to check if they are symbolic links) before being a target, which would be an error.

.SH OPTIONS
.LP
Item(B(-W),B(--write))           Report an actual write, not only target flags. Default is to only alter flags.
Item(B(-z),B(--dir))             Specify a directory for use with I(--list).
Item(B(-l),B(--list))            Print list of currently generated targets to stdout.
Only targets lying in the dir mentioned with I(--dir) are listed (if this option is used), and only if they match the regexpr argument (if I(--regexpr)) as reported.
If the cwd lies outside the repo, listed files are absolute, else they are relative unless they are within an absolute source dir.
The order of the listed targets is the chronological order.
Cf note (3).
Item(B(-X),B(--regexpr))         Pass flags to all targets matching regexprs passed as argument. The B(ignore) flag only applies to targets following this command.
Item(B(-x),B(--no-exclude-star)) Accept that flags are further processed according to regexpr-based requests, e.g. B(ltarget --regexpr), default is to exclude such processing.
Item(B(-E),B(--essential))       Show when generating user oriented graphs.
Item(B(-i),B(--incremental))     Targets are not unlinked before job execution and read accesses to them are ignored (including C(readdir,3)).
Item(B(-w),B(--no-warning))      No warning is emitted if targets are either uniquified or unlinked while generated by another job.
Item(B(-`I'),B(--ignore))        From now on, ignore all reads and writes to targets (including C(readdir,3)).
Item(B(-a),B(--no-allow))        Unless this option is passed, B(ltarget) makes its arguments valid targets.
Item(B(-s),B(--source-ok))       Unless this option is passed, writing to a source is an error. In that case, being simultaneously a dep and a target is ok.
.LP
In case mentioned targets turn out to be deps, the dep flags are also available:
Item(B(-c),B(--critical))     Create critical deps (cf. note (4)).
Item(B(-D),B(--readdir-ok))   Allow C(readdir,3) on passed deps even if not B(ignore)d nor B(incremental). Implies flag B(--no-required).
Item(B(-e),B(--ignore-error)) Ignore the error status of the passed deps.
Item(B(-r),B(--no-required))  Accept that deps be not buildable, as for a normal read access (in such a case, the read may fail, but OpenLmake is ok).

.SH "EXIT STATUS"
.LP
B(ltarget) exits with a status of zero if target flags were correctly set.
Else it exits with a non-zero status:
.LP
Item(B(2))  internal error, should not occur
Item(B(11)) bad usage : command line options and arguments coul not be parsed

.SH EXAMPLES
.LP
V(ltarget --ignore a_file) # reading/writing to a_file will be ignored
.LP
V(echo >a_file)
.LP
V(ltarget --readdir_ok a_dir)
.LP
V(rm -rf a_dir)

.SH NOTES
Item((1))
	The same functionality is provided with the B(lmake.target) python function.
Item((2))
	Flags can be associated to targets on a regexpr (matching on target name) basis by using the B(side_targets) rule attribute.
Item((3))
	I(--list) is provided as a secure way to replace C(readdir,3).
	Using this feature only relies on job execution, not spurious files that can exist without the possibility of depending on such list.
Item((4))
	If a series of dep is directly derived from the content of a file, it may be wise to declare it as B(critical).
	When a critical dep is modified, OpenLmake forgets about deps reported after it.
	.IP
	Usually, when a file is modified, this has no influence on the list of files that are accessed after it,
	and OpenLmake anticipates this by building these deps speculatively.
	But in some situations, it is almost certain that there will be an influence and it is preferable not to anticipate.
	this is what critical deps are made for: in case of modifications, following deps are not built speculatively.

Footer
